
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId;
      allow create: if request.auth.uid != null;
      
      // Armors Subcollection
      match /armors/{armorId} {
        allow read, write: if request.auth.uid == userId;
      }

      // Messages Subcollection
      match /messages/{messageId} {
        allow read, write: if request.auth.uid == userId;
      }
    }

    // Shared Armors Collection
    match /sharedArmors/{armorId} {
      allow read: if request.auth != null;
    }
    
    // Prayer Circles Collection
    match /prayerCircles/{circleId} {
      // Allow any authenticated user to read a circle's details.
      // The application logic handles filtering for private vs. public circles in lists.
      allow read: if request.auth != null;

      // Allow listing of circles for all authenticated users.
      allow list: if request.auth != null;

      // Create: Any logged-in user can create. Creator must be in the members list.
      allow create: if request.auth != null && request.resource.data.createdBy == request.auth.uid && request.auth.uid in request.resource.data.members;

      // Update:
      // 1. The creator (moderator) can update fields.
      // 2. Any user can join/leave (update members array).
      allow update: if request.auth != null;

      // Delete: Only the creator.
      allow delete: if request.auth != null && request.auth.uid == resource.data.createdBy;
    }
    
    // Prayer Requests Subcollection (implicitly within prayerCircles, but better to be explicit if needed)
    match /prayerRequests/{requestId} {
      allow read, write: if request.auth != null; // Simplified for now
    }
  }
}
