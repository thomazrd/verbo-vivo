rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Regras Gerais
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Coleção de Usuários
    match /users/{userId} {
      // O próprio usuário pode ler e escrever seus dados.
      allow read, write: if request.auth.uid == userId;
      
      // Qualquer usuário autenticado pode ler perfis públicos.
      allow list: if isAuthenticated();
    }
    
    // Planos de Estudo do Usuário (aninhado)
    match /users/{userId}/plans/{planId} {
      allow read, write, delete: if request.auth.uid == userId;
    }

    // Diário Pessoal (aninhado)
    match /users/{userId}/journals/{journalId} {
        allow read, write, delete: if request.auth.uid == userId;
    }

    // Armaduras do Usuário (aninhado)
    match /users/{userId}/armors/{armorId} {
        allow read, write, delete: if request.auth.uid == userId;
    }
    
    // Mensagens de Chat (aninhado)
    match /users/{userId}/messages/{messageId} {
       allow read, write: if request.auth.uid == userId;
    }

    // Notificações
    match /notifications/{notificationId} {
      // O destinatário pode ler e atualizar (marcar como lida) suas notificações.
      allow read, update: if isAuthenticated() && request.auth.uid == resource.data.recipientId;
      // Funções de Cloud criam, mas ninguém deve deletar ou listar todas.
      allow create: if false;
      allow delete: if false;
    }
    
    // Tokens para Push Notification
    match /userPushTokens/{userId} {
       // O próprio usuário pode criar/atualizar seu token.
       allow write: if isAuthenticated() && request.auth.uid == userId;
       // Ninguém pode ler os tokens, exceto as Funções de Cloud.
       allow read: if false;
    }

    // Conteúdo Compartilhado (Ponte da Esperança)
    match /sharedContent/{contentId} {
      // Todos podem ler.
      allow read;
      // Apenas usuários autenticados podem criar.
      allow create: if isAuthenticated();
      // O criador pode atualizar/deletar.
      allow update, delete: if isAuthenticated() && request.auth.uid == resource.data.creatorId;
    }

    // Orações (Santuário)
    match /prayers/{prayerId} {
       allow create: if isAuthenticated();
       allow read, write: if isAuthenticated() && request.auth.uid == resource.data.userId;
    }

    // Meditações
    match /meditations/{meditationId} {
        allow create: if isAuthenticated();
        allow read, write: if isAuthenticated() && request.auth.uid == resource.data.userId;
    }
    
    // Círculos de Oração
    match /prayerCircles/{circleId} {
       // Qualquer usuário autenticado pode ler círculos públicos.
       allow read: if isAuthenticated() && resource.data.isPublic == true;
       // Membros podem ler círculos privados.
       allow read: if isAuthenticated() && resource.data.isPublic == false && request.auth.uid in resource.data.members;
       // Qualquer usuário autenticado pode criar.
       allow create: if isAuthenticated();
       // O criador pode deletar. Membros podem se adicionar/remover. Admins podem atualizar.
       allow update, delete: if isAuthenticated() && request.auth.uid == resource.data.createdBy;
    }

    // Vitórias (Hall da Honra)
    match /victories/{victoryId} {
      // Todos autenticados podem ler.
      allow read: if isAuthenticated();
      // Apenas o criador do círculo pode registrar uma vitória para ele.
      allow create: if isAuthenticated(); // A lógica de quem pode criar é validada na Cloud Function
      // Apenas usuários autenticados podem dar "Amém"
      allow update: if isAuthenticated();
    }
    
    // Congregações e subcoleções
    match /congregations/{congregationId} {
      allow read: if isAuthenticated();
      allow create, update: if isAuthenticated(); // Gerenciado por Cloud Functions
      
      match /members/{userId} {
        allow read: if isAuthenticated();
        allow create, update, delete: if isAuthenticated(); // Gerenciado por Cloud Functions e admins
      }
      
      match /posts/{postId} {
        allow read, create: if isAuthenticated();
        allow update, delete: if isAuthenticated() && request.auth.uid == resource.data.authorId;
        
        match /likes/{userId} {
           allow read: if isAuthenticated();
           allow create, delete: if isAuthenticated() && request.auth.uid == userId;
        }
        
        match /comments/{commentId} {
          allow read, create: if isAuthenticated();
          allow update, delete: if isAuthenticated() && request.auth.uid == resource.data.authorId;
        }
      }
    }

    // Coleção de Artigos (Blog)
    match /articles/{articleId} {
      // Permite leitura pública de artigos publicados.
      allow read: if resource.data.status == 'published';
      // Permite que usuários autenticados (com papel de admin via app) criem/atualizem.
      allow create, update, delete: if isAuthenticated();
    }
    
    // Coleção de Estudos (Pílulas de Sabedoria)
    match /studies/{studyId} {
        // Permite que qualquer pessoa leia um estudo se ele estiver publicado.
        allow read: if resource.data.status == 'published';
        // Permite que usuários autenticados criem/atualizem/deletem. A lógica de admin é no app.
        allow create, update, delete: if isAuthenticated();
    }
    
    // Sugestões de Estudos
    match /suggestions/{suggestionId} {
      // Qualquer usuário autenticado pode criar uma sugestão.
      allow create: if isAuthenticated();
      // Apenas admins (lógica no app) podem ler e atualizar o status.
      allow read, update, delete: if isAuthenticated();
    }
  }
}
