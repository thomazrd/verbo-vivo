rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Regras para a coleção 'users'
    match /users/{userId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
    }

    // Regras para a coleção 'plans' de cada usuário
    match /users/{userId}/plans/{planId} {
      allow read, write, delete: if request.auth != null && request.auth.uid == userId;
    }

    // Regras para a coleção 'messages' de cada usuário
    match /users/{userId}/messages/{messageId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Regras para a coleção 'journals'
    match /journals/{entryId} {
        // Usuários podem criar entradas para si mesmos
        allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
        // Usuários podem ler, atualizar e deletar suas próprias entradas
        allow read, update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }
    
    // Regras para a coleção 'prayers'
    match /prayers/{prayerId} {
      allow create: if request.auth.uid == request.resource.data.userId;
      allow read: if request.auth.uid == resource.data.userId;
    }

    // Regras para a coleção 'prayerCircles'
    match /prayerCircles/{circleId} {
      allow read: if request.auth.uid in resource.data.members;
      allow create: if request.auth.uid == request.resource.data.createdBy;
      allow update: if request.auth.uid in resource.data.members;
    }

    // Regras para a subcoleção de pedidos de oração
    match /prayerRequests/{requestId} {
      allow read, create: if get(/databases/$(database)/documents/prayerCircles/$(request.resource.data.circleId)).data.members.hasAny([request.auth.uid]);
      allow update: if get(/databases/$(database)/documents/prayerCircles/$(resource.data.circleId)).data.members.hasAny([request.auth.uid]);
    }
    
    // Regras para Congregações
    match /congregations/{congregationId} {
        allow read: if request.auth != null;
        allow create: if request.auth.uid == request.resource.data.createdBy;
    }

    match /congregations/{congregationId}/members/{memberId} {
        allow read: if request.auth.uid == memberId || get(/databases/$(database)/documents/congregations/$(congregationId)).data.admins[request.auth.uid] == true;
        allow write: if request.auth.uid == memberId || get(/databases/$(database)/documents/congregations/$(congregationId)).data.admins[request.auth.uid] == true;
    }
    
    match /congregationPosts/{postId} {
        allow read: if get(/databases/$(database)/documents/congregations/$(resource.data.congregationId)).data.admins[request.auth.uid] == true || exists(/databases/$(database)/documents/congregations/$(resource.data.congregationId)/members/$(request.auth.uid));
        allow create, update: if get(/databases/$(database)/documents/congregations/$(request.resource.data.congregationId)).data.admins[request.auth.uid] == true || exists(/databases/$(database)/documents/congregations/$(request.resource.data.congregationId)/members/$(request.auth.uid));
    }
    
    match /congregationPosts/{postId}/comments/{commentId} {
      allow read, create: if exists(/databases/$(database)/documents/congregationPosts/$(postId)); // Simplificado, idealmente checa se é membro
    }

    // Regras para a coleção 'sharedContent' (Ponte da Esperança)
    match /sharedContent/{contentId} {
      // Qualquer pessoa pode ler o conteúdo
      allow read: if true;
      // Apenas usuários autenticados podem criar conteúdo
      allow create: if request.auth != null && request.resource.data.creatorId == request.auth.uid;
      // Apenas o criador pode atualizar (ex: deletar)
      allow update: if request.auth != null && resource.data.creatorId == request.auth.uid;
    }
  }
}