rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Funções Globais de Ajuda ---
    function userData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }

    // ===============================================
    // REGRAS DE ACESSO POR COLEÇÃO
    // ===============================================

    // --- Coleção de Usuários (users) ---
    match /users/{userId} {
      // Um usuário pode ler e atualizar seu próprio perfil.
      allow read, update: if request.auth != null && request.auth.uid == userId;
      // Ninguém pode criar ou deletar perfis diretamente (gerenciado no backend).
      allow create, delete: if false;
    }

    // --- Coleção de Mensagens do Chat (messages) ---
    // Subcoleção de /users
    match /users/{userId}/messages/{messageId} {
      // Um usuário só pode ler e escrever em sua própria coleção de mensagens.
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // --- Coleção de Planos de Estudo (plans) ---
    // Subcoleção de /users
    match /users/{userId}/plans/{planId} {
        // Um usuário só pode gerenciar seus próprios planos de estudo.
        allow read, write, delete: if request.auth != null && request.auth.uid == userId;
    }

    // --- Coleção de Orações (prayers) e Meditações (meditations) ---
    // Subcoleções de /users
    match /users/{userId}/{collection}/{docId} {
      // Usuários podem criar e ler seus próprios registros privados.
      // Atualizações e exclusões não são permitidas pela UI por padrão, mas a regra permite.
      allow read, write, delete: if request.auth != null && request.auth.uid == userId;
    }
    
    // --- Coleção de Diário (journals) ---
    match /journals/{journalId} {
        // O usuário só pode ler e escrever suas próprias entradas de diário.
        allow read, update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
        allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }

    // --- Coleção de Congregações (congregations) e suas subcoleções ---
    match /congregations/{congregationId} {
        // Leitura: Qualquer usuário autenticado que seja membro pode ler os dados da congregação.
        allow read: if request.auth != null && get(/databases/$(database)/documents/congregations/$(congregationId)/members/$(request.auth.uid)).data.status != null;
        // Escrita: Apenas admins podem atualizar os dados da congregação.
        allow update: if request.auth != null && get(/databases/$(database)/documents/congregations/$(congregationId)/members/$(request.auth.uid)).data.status == 'ADMIN';
        // Criação e exclusão são gerenciadas por Cloud Functions.
        allow create, delete: if false;

        // Subcoleção de Membros
        match /members/{userId} {
            // Leitura: Admins podem ver todos os membros, membros só podem ver a si mesmos.
            allow read: if (request.auth != null && request.auth.uid == userId) || (userData(request.auth.uid).congregationStatus == 'ADMIN' && userData(request.auth.uid).congregationId == congregationId);
            // Escrita: Gerenciado por Cloud Functions (solicitações, aprovações).
            allow write: if userData(request.auth.uid).congregationStatus == 'ADMIN' && userData(request.auth.uid).congregationId == congregationId;
        }

        // Subcoleção de Posts
        match /posts/{postId} {
            // Leitura/Escrita: Qualquer membro da congregação pode criar, ler, e interagir com posts.
            // Um usuário só pode editar/excluir seus próprios posts.
            allow read: if request.auth != null && userData(request.auth.uid).congregationId == congregationId;
            allow create: if request.auth != null && request.resource.data.authorId == request.auth.uid && userData(request.auth.uid).congregationId == congregationId;
            allow update: if request.auth != null && request.resource.data.authorId == request.auth.uid; // Para likes
            allow delete: if request.auth != null && resource.data.authorId == request.auth.uid;
            
            // Sub-coleções de Likes e Comments
            match /{subcollection}/{docId} {
                allow read: if request.auth != null && userData(request.auth.uid).congregationId == congregationId;
                allow create: if request.auth != null && request.resource.data.authorId == request.auth.uid && userData(request.auth.uid).congregationId == congregationId;
                allow update, delete: if request.auth != null && request.resource.data.authorId == request.auth.uid;
            }
        }
    }
    
    // --- Coleção de Conteúdo Compartilhado (Ponte da Esperança) ---
    match /sharedContent/{contentId} {
        // Leitura: Qualquer pessoa pode ler.
        allow read: if true;
        // Escrita: Usuários autenticados podem criar. Ninguém pode atualizar ou deletar (gerenciado por backend se necessário).
        allow create: if request.auth != null;
        allow update, delete: if false;
    }
    
    // --- Coleção de Artigos (Blog) ---
    match /articles/{articleId} {
        // Leitura: Todos podem ler artigos publicados. Admins podem ler qualquer status.
        allow read: if resource.data.status == 'published' || (request.auth != null && userData(request.auth.uid).congregationStatus == 'ADMIN');
        // Escrita: Apenas administradores da congregação podem criar, editar e apagar artigos.
        allow write: if request.auth != null && userData(request.auth.uid).congregationStatus == 'ADMIN';
    }

    // --- Coleção de Estudos & Pílulas de Sabedoria ---
    match /studies/{studyId} {
      // Leitura: Todos podem ler estudos publicados. Admins podem ler qualquer um.
      allow get: if resource.data.status == 'PUBLISHED' || (request.auth != null && userData(request.auth.uid).role == 'ADMIN');
      // Lista: Todos podem listar estudos, contanto que filtrem por status 'PUBLISHED'
      allow list: if request.query.get("status") == "PUBLISHED" || (request.auth != null && userData(request.auth.uid).role == 'ADMIN');

      // Escrita: Apenas admins podem criar, editar ou apagar.
      allow write: if request.auth != null && userData(request.auth.uid).role == 'ADMIN';
    }
    
     // --- Coleção de Sugestões de Estudos ---
    match /suggestions/{suggestionId} {
      // Leitura: Apenas admins podem ler as sugestões.
      allow read: if request.auth != null && userData(request.auth.uid).role == 'ADMIN';
      // Escrita: Usuários autenticados podem criar. Admins podem atualizar (mudar status).
      allow create: if request.auth != null;
      allow update: if request.auth != null && userData(request.auth.uid).role == 'ADMIN';
      allow delete: if false;
    }
  }
}
