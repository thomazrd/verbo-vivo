rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // --- Helper Functions ---
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isAdminOf(congregationId) {
      return get(/databases/$(database)/documents/congregations/$(congregationId)/members/$(request.auth.uid)).data.status == 'ADMIN';
    }
    
    function isMemberOf(congregationId) {
      let memberStatus = get(/databases/$(database)/documents/congregations/$(congregationId)/members/$(request.auth.uid)).data.status;
      return memberStatus == 'MEMBER' || memberStatus == 'ADMIN' || memberStatus == 'APPROVED';
    }
    
    // --- Users Collection ---
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if isOwner(userId);
      allow update: if isOwner(userId)
                    || (
                         isAdminOf(request.resource.data.congregationId) && 
                         request.resource.data.keys().hasOnly(['congregationStatus', 'congregationId'])
                       );
    }
    
    // --- Journals Collection ---
    match /journals/{journalId} {
        allow read, update, delete: if isOwner(resource.data.userId);
        allow create: if isOwner(request.resource.data.userId);
    }

    // --- Study Plans (Subcollection of Users) ---
    match /users/{userId}/plans/{planId} {
      allow read, write: if isOwner(userId);
    }

    // --- Messages (Subcollection of Users) ---
    match /users/{userId}/messages/{messageId} {
      allow read, write: if isOwner(userId);
    }
    
    // --- Prayers Collection ---
    match /prayers/{prayerId} {
      allow read, create: if request.auth != null && isOwner(request.resource.data.userId);
    }
    
    // --- Meditations Collection ---
    match /meditations/{meditationId} {
      allow read, create: if request.auth != null && isOwner(request.resource.data.userId);
    }
    
    // --- Prayer Circles ---
    match /prayerCircles/{circleId} {
      allow read: if request.auth.uid in resource.data.members;
      allow create: if request.auth.uid == request.resource.data.createdBy && request.auth.uid in request.resource.data.members;
      allow update: if request.auth.uid in resource.data.members; // Allows joining
    }
    
    match /prayerRequests/{requestId} {
      allow read, create: if isMemberOf(resource.data.circleId);
      allow update: if isMemberOf(resource.data.circleId) && request.resource.data.keys().hasOnly(['prayingUsers']);
    }

    // --- Shared Content (Ponte da Esperan√ßa) ---
    match /sharedContent/{contentId} {
        allow read: if resource.data.status == 'ACTIVE';
        allow create: if request.auth != null && isOwner(request.resource.data.creatorId);
        allow update: if request.auth != null && isOwner(resource.data.creatorId);
    }

    // --- Congregations ---
    match /congregations/{congregationId} {
      allow read: if isMemberOf(congregationId);
      allow create: if request.auth.uid == request.resource.data.createdBy;
      allow update: if isAdminOf(congregationId);

      // --- Members Subcollection ---
      match /members/{userId} {
        allow read: if isMemberOf(congregationId);
        allow create: if request.auth.uid == userId; // Allows joining or creating own member doc
        allow update: if isAdminOf(congregationId) 
                    || (isOwner(userId) && request.resource.data.keys().hasOnly(['displayName', 'photoURL']));
        allow delete: if isAdminOf(congregationId) || isOwner(userId);
      }
      
      // --- Posts Subcollection ---
      match /posts/{postId} {
        allow read, create: if isMemberOf(congregationId);
        allow update: if isOwner(resource.data.authorId) || isMemberOf(congregationId); // Members can 'like'
        allow delete: if isOwner(resource.data.authorId) || isAdminOf(congregationId);
        
        // --- Comments Subcollection ---
        match /comments/{commentId} {
            allow read, create: if isMemberOf(congregationId);
            allow update: if isOwner(resource.data.authorId)
                           || (isMemberOf(congregationId) && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['replyCount']));
            allow delete: if isOwner(resource.data.authorId) || isAdminOf(congregationId);
        }
      }
    }
  }
}