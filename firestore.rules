rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Functions ---
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    
    function isCongregationMember(congregationId) {
        return isSignedIn() && get(/databases/$(database)/documents/congregations/$(congregationId)/members/$(request.auth.uid)).data.status != 'PENDING';
    }

    function isCongregationAdmin(congregationId) {
        return isSignedIn() && get(/databases/$(database)/documents/congregations/$(congregationId)/members/$(request.auth.uid)).data.status == 'ADMIN';
    }

    // --- Collections ---

    match /articles/{articleId} {
      allow read: if resource.data.status == 'published';
      allow write: if false; // Admin only
    }

    match /battlePlans/{planId} {
      allow read: if isSignedIn() && (resource.data.status == 'PUBLISHED' || resource.data.creatorId == request.auth.uid);
      allow create: if isSignedIn();
      allow update, delete: if isSignedIn() && resource.data.creatorId == request.auth.uid;
    }

    match /congregations/{congregationId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && request.auth.uid == request.resource.data.createdBy;
      allow update, delete: if isCongregationAdmin(congregationId);

      match /members/{userId} {
        allow read, list: if isCongregationMember(congregationId);
        allow create: if isSignedIn() && isOwner(userId);
        allow update: if isCongregationAdmin(congregationId);
        allow delete: if isCongregationAdmin(congregationId) || isOwner(userId);
      }

      match /posts/{postId} {
        allow read: if isCongregationMember(congregationId);
        allow create: if isCongregationMember(congregationId) && isOwner(request.resource.data.authorId);
        allow update, delete: if isOwner(resource.data.authorId);

        match /comments/{commentId} {
          allow read: if isCongregationMember(congregationId);
          // Any authenticated user can comment, as long as they are the author of the comment document.
          allow create: if isSignedIn() && request.auth.uid == request.resource.data.authorId;
          allow update, delete: if isOwner(resource.data.authorId);
        }

        match /likes/{userId} {
          allow read: if isCongregationMember(congregationId);
          allow create, delete: if isCongregationMember(congregationId) && isOwner(userId);
        }
      }
    }

    match /journals/{journalId} {
      allow list: if request.auth != null;
      allow get, update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }

    match /missionLogs/{logId} {
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow read, update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }

    match /notifications/{notificationId} {
      allow read: if isSignedIn() && resource.data.recipientId == request.auth.uid;
      allow write: if false;
    }

    match /prayerCircles/{circleId} {
      allow read: if resource.data.isPublic == true || (isSignedIn() && request.auth.uid in resource.data.members);
      allow create: if isSignedIn();
      allow update: if isSignedIn() && request.auth.uid in resource.data.members;
      allow delete: if isSignedIn() && resource.data.createdBy == request.auth.uid;
    }
    
    match /sharedArmors/{armorId} {
      allow read: if true;
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isSignedIn() && resource.data.userId == request.auth.uid;
    }

    match /sharedContent/{contentId} {
      allow read: if resource.data.status == 'ACTIVE';
      allow create: if isSignedIn();
      allow update, delete: if isOwner(request.resource.data.creatorId);
    }
    
    match /studies/{studyId} {
      allow read: if resource.data.status == 'PUBLISHED';
      allow write: if false;
    }

    match /users/{userId} {
      allow read: if isSignedIn();
      allow write: if isOwner(userId);

      match /plans/{planId} { allow read, write: if isOwner(userId); }
      match /armors/{armorId} { allow read, write: if isOwner(userId); }
      match /messages/{messageId} { allow read, write: if isOwner(userId); }
      match /battlePlans/{userPlanId} { allow read, write: if isOwner(userId); }
    }
    
    match /userPushTokens/{tokenId} {
      allow read, write: if isSignedIn() && request.resource.data.userId == request.auth.uid;
    }

    match /victories/{victoryId} {
        allow read: if true;
        allow update: if isSignedIn();
        allow create: if isSignedIn();
        allow delete: if false;
    }
  }
}
