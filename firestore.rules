rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Funções de utilidade globais
    function isUserAuthenticated() {
      return request.auth != null;
    }

    function isUserAdmin() {
      return isUserAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'ADMIN';
    }

    function isOwner(userId) {
      return isUserAuthenticated() && request.auth.uid == userId;
    }

    function isCongregationMember(congregationId) {
      return isUserAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.congregationId == congregationId
          && (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.congregationStatus == 'MEMBER'
           || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.congregationStatus == 'ADMIN');
    }

    function isCongregationAdmin(congregationId) {
      return isUserAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.congregationId == congregationId
          && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.congregationStatus == 'ADMIN';
    }


    // Regras para o Módulo de Chat
    match /users/{userId}/messages/{messageId} {
      allow read, write: if isOwner(userId);
    }


    // === REGRAS DA CONGREGAÇÃO ===
    match /congregations/{congregationId} {
      allow read: if isUserAuthenticated();
      allow create: if isUserAuthenticated() && request.resource.data.createdBy == request.auth.uid;
      allow update: if isCongregationAdmin(congregationId);
      
      // Membros
      match /members/{userId} {
        allow read: if isCongregationMember(congregationId);
        allow create: if isOwner(userId); // Ao solicitar entrada
        allow update: if isCongregationAdmin(congregationId); // Aprovação, promoção
        allow delete: if isCongregationAdmin(congregationId) || isOwner(userId); // Remover ou sair
      }
      
      // Posts
      match /posts/{postId} {
        allow read: if isCongregationMember(congregationId);
        allow create: if isCongregationMember(congregationId) && request.resource.data.authorId == request.auth.uid;
        allow update: if isOwner(request.resource.data.authorId);
        allow delete: if isOwner(request.resource.data.authorId) || isCongregationAdmin(congregationId);
        
        // Likes
        match /likes/{userId} {
          allow read: if isCongregationMember(congregationId);
          allow create, delete: if isOwner(userId);
        }
        
        // Comentários
        match /comments/{commentId} {
           allow read: if isCongregationMember(congregationId);
           allow create: if isCongregationMember(congregationId) && request.resource.data.authorId == request.auth.uid;
           allow update: if isOwner(request.resource.data.authorId);
           allow delete: if isOwner(request.resource.data.authorId) || isCongregationAdmin(congregationId);
        }
      }
    }


    // === REGRAS GERAIS ===

    // Diário Pessoal
    match /journals/{journalId} {
      allow read, write, delete: if isOwner(request.resource.data.userId);
    }

    // Planos de Estudo Pessoais
    match /plans/{planId} {
        allow read, write, delete: if isOwner(request.resource.data.userId);
    }

    // Orações Pessoais
    match /prayers/{prayerId} {
       allow read, write, delete: if isOwner(request.resource.data.userId);
    }

    // Meditações Pessoais
    match /meditations/{meditationId} {
       allow read, write, delete: if isOwner(request.resource.data.userId);
    }

    // Jornadas de Sentimento
    match /feelingJourneys/{journeyId} {
       allow read, write, delete: if isOwner(request.resource.data.userId);
    }

    // Ponte da Esperança (Conteúdo Compartilhado)
    match /sharedContent/{contentId} {
      allow read: if resource.data.status == 'ACTIVE';
      allow create: if isUserAuthenticated() && request.resource.data.creatorId == request.auth.uid;
      allow update: if isOwner(resource.data.creatorId); // Para marcar como deletado
    }

    // Tokens para Notificações Push
    match /userPushTokens/{userId} {
      allow read, write: if isOwner(userId);
    }
    
    // Notificações do Usuário
    match /notifications/{notificationId} {
      allow read, update: if isOwner(resource.data.recipientId);
    }



// --- Studies Rules ---
// Published studies are public.
// Drafts are only accessible by admins.
// Writing is restricted to admins.
match /studies/{studyId} {
  allow read: if resource.data.status == 'published'
              || (request.auth != null && getUserData(request.auth.uid).role == 'ADMIN');
  allow write: if request.auth != null && getUserData(request.auth.uid).role == 'ADMIN';
}


    // === REGRAS DE USUÁRIOS ===
    match /users/{userId} {
      // Qualquer usuário autenticado pode ler perfis para funcionalidades da comunidade
      allow read: if isUserAuthenticated();
      
      // Usuário só pode criar e modificar seu próprio perfil
      allow create, update: if isOwner(userId);
    }



  }
}


