rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // =============================================
    //           FUNÇÕES DE UTILIDADE
    // =============================================

    // --- Funções de Autenticação ---
    function isSignedIn() {
      return request.auth != null;
    }

    function isProfileOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isSignedIn() && request.auth.token.role == 'ADMIN';
    }

    function isCongregationMember(congregationId) {
      return isSignedIn() && get(/databases/$(database)/documents/congregations/$(congregationId)/members/$(request.auth.uid)).data.status != 'PENDING';
    }
    
    function isCongregationAdmin(congregationId) {
       return isSignedIn() && get(/databases/$(database)/documents/congregations/$(congregationId)/members/$(request.auth.uid)).data.status == 'ADMIN';
    }

    // --- Funções de Validação de Dados ---
    function isString(value) {
      return value is string;
    }

    function isStringSized(value, min, max) {
      return isString(value) && value.size() >= min && value.size() <= max;
    }

    function isBoolean(value) {
      return value is bool;
    }
    
    function isTimestamp(value) {
        return value is timestamp;
    }

    function canReadStudy() {
  // Allow read if the study is published, or if the user is an admin reading any status.
  return resource.data.status == 'PUBLISHED' || (isSignedIn() && isRole('ADMIN'));
}

function canWriteStudy() {
  // Allow write only if the user is an admin.
  return isSignedIn() && isRole('ADMIN');
}

function canReadArticle() {
  return resource.data.status == 'published' || (isSignedIn() && isRole('ADMIN'));
}

function canWriteArticle() {
  return isSignedIn() && isRole('ADMIN');
}



match /articles/{articleId} {
  // Qualquer pessoa pode ler artigos publicados.
  allow read: if resource.data.status == 'published';

  // Apenas administradores podem criar, atualizar ou deletar artigos.
  allow write: if isAdmin();
}


    match /congregations/{congregationId} {
      allow read: if isCongregationMember(congregationId);
      allow create: if request.auth != null;
      
      // Regras para subcoleções
      match /members/{userId} {
        allow read: if isCongregationMember(congregationId);
        allow write: if isProfileOwner(userId);
      }
      
      match /posts/{postId} {
        allow read: if isCongregationMember(congregationId);
        allow create: if isProfileOwner(request.resource.data.authorId);
        
        // A permissão de 'write' aqui é crucial para permitir que os usuários
        // criem documentos em subcoleções (como comentários e likes).
        // As regras mais específicas de 'update' e 'delete' abaixo irão sobrescrever
        // esta regra para o documento do post em si.
        allow write: if isCongregationMember(congregationId);
        
        // Apenas o autor do post pode atualizá-lo ou deletá-lo.
        allow update, delete: if isProfileOwner(resource.data.authorId);

        match /comments/{commentId} {
          allow read: if isCongregationMember(congregationId);
          allow create: if isCongregationMember(congregationId);
          allow update, delete: if isProfileOwner(resource.data.authorId);
        }
        
        match /likes/{userId} {
          allow read: if isCongregationMember(congregationId);
          allow create, delete: if isProfileOwner(userId);
        }
      }
    }


match /sharedArmors/{armorId} {
  allow read: if true;
  allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
  allow update, delete: if isSignedIn() && resource.data.userId == request.auth.uid;
}



match /studies/{studyId} {
  // Qualquer pessoa pode ler um estudo publicado.
  allow read: if resource.data.status == 'PUBLISHED';

  // Apenas administradores podem criar, atualizar ou deletar estudos.
  allow write: if isAdmin();
}



match /users/{userId} {
  // Qualquer usuário autenticado pode ler perfis (para ver nomes, fotos, etc).
  allow read: if isSignedIn();
  
  // Apenas o próprio usuário pode escrever em seu perfil.
  allow write: if isProfileOwner(userId);

  // Subcoleção de planos de estudo
  match /plans/{planId} {
    // Apenas o dono do perfil pode acessar seus próprios planos.
    allow read, write, delete: if isProfileOwner(userId);
  }
  
  // Subcoleção de armaduras
  match /armors/{armorId} {
     // Apenas o dono do perfil pode acessar suas próprias armaduras.
    allow read, write, delete: if isProfileOwner(userId);
  }
}

// Armaduras compartilhadas podem ser lidas por qualquer usuário autenticado.
match /sharedArmors/{armorId} {
    allow read: if isSignedIn();
    // A escrita (criar/atualizar/deletar) é gerenciada pelo dono na sua própria coleção /users/{userId}/armors
    allow write: if false;
}
  }
}
