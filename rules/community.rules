
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Coleção: congregations
    match /congregations/{congregationId} {
      // Qualquer usuário autenticado pode ler os dados de uma congregação
      allow read: if request.auth != null;
      
      // Apenas administradores da congregação podem atualizar os dados
      allow update: if request.auth != null && resource.data.admins[request.auth.uid] == true;
      
      // A criação é gerenciada por uma Cloud Function, não por regras diretas
      allow create: if false; 
      
      // Subcoleção: members
      match /members/{userId} {
        // Leitura: qualquer membro da congregação pode ver outros membros
        allow read: if request.auth != null && get(/databases/$(database)/documents/congregations/$(congregationId)/members/$(request.auth.uid)).data.status in ['MEMBER', 'ADMIN'];
        
        // Escrita: Apenas admins podem alterar status (aprovar, promover). O próprio usuário pode se remover.
        // A lógica de adição (solicitação) e aprovação é feita via Cloud Functions para segurança.
        allow write: if request.auth != null && (
          // Admin gerenciando
          get(/databases/$(database)/documents/congregations/$(congregationId)).data.admins[request.auth.uid] == true ||
          // Usuário saindo (deletando seu próprio documento de membro)
          (request.auth.uid == userId && request.resource == null)
        );
      }
      
      // Subcoleção: posts
      match /posts/{postId} {
        // Leitura: Membros da congregação podem ler posts
        allow read: if request.auth != null && get(/databases/$(database)/documents/congregations/$(congregationId)/members/$(request.auth.uid)).data.status in ['MEMBER', 'ADMIN'];
        
        // Escrita: Membros podem criar posts. Apenas o autor ou admin podem editar/deletar.
        allow create: if request.auth != null && get(/databases/$(database)/documents/congregations/$(congregationId)/members/$(request.auth.uid)).data.status in ['MEMBER', 'ADMIN'];
        allow update, delete: if request.auth != null && (
          resource.data.authorId == request.auth.uid ||
          get(/databases/$(database)/documents/congregations/$(congregationId)).data.admins[request.auth.uid] == true
        );
        
        // Subcoleções de posts
        match /{subcollection}/{docId} {
           // Qualquer membro pode criar likes e comentários
           allow create: if request.auth != null && get(/databases/$(database)/documents/congregations/$(congregationId)/members/$(request.auth.uid)).data.status in ['MEMBER', 'ADMIN'];
           
           // Apenas o autor do like/comentário pode deletá-lo
           allow delete: if request.auth != null && resource.data.authorId == request.auth.uid;

           // Apenas o autor do comentário pode editá-lo
           allow update: if subcollection == 'comments' && request.auth != null && resource.data.authorId == request.auth.uid;
        }
      }
    }
  }
}
